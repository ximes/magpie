!function(e){function n(e){function n(e,n){n.series.curvedLines.active&&e.hooks.processDatapoints.unshift(r)}function r(e,n,r){var t=r.points.length/r.pointsize;if(!u(n.curvedLines)&&1==n.curvedLines.apply&&n.originSeries===undefined&&t>1.005)if(n.lines.fill){var o=i(r,n.curvedLines,1),s=i(r,n.curvedLines,2);r.pointsize=3,r.points=[];for(var a=0,p=0,v=0,f=2;v<o.length||a<s.length;)o[v]==s[a]?(r.points[p]=o[v],r.points[p+1]=o[v+1],r.points[p+2]=s[a+1],a+=f,v+=f):o[v]<s[a]?(r.points[p]=o[v],r.points[p+1]=o[v+1],r.points[p+2]=p>0?r.points[p-1]:null,v+=f):(r.points[p]=s[a],r.points[p+1]=p>1?r.points[p-2]:null,r.points[p+2]=s[a+1],a+=f),p+=3}else n.lines.lineWidth>0&&(r.points=i(r,n.curvedLines,1),r.pointsize=2)}function i(e,n,r){if("undefined"!=typeof n.legacyOverride&&0!=n.legacyOverride){var i={fit:!1,curvePointFactor:20,fitPointDist:undefined};return s(e,jQuery.extend(i,n.legacyOverride),r)}return t(e,n,r)}function t(e,n,r){for(var i=e.points,t=e.pointsize,s=o(e,n,r),u=[],a=0,p=0;p<i.length-t;p+=t){var v=p,f=p+r,h=i[v],l=i[v+t],c=(l-h)/Number(n.nrSplinePoints);u.push(i[v]),u.push(i[f]);for(var d=h+=c;d<l;d+=c)u.push(d),u.push(s[a](d));a++}return u.push(i[i.length-t]),u.push(i[i.length-t+r]),u}function o(e,n,r){for(var i=e.points,t=e.pointsize,o=[],s=[],u=0;u<i.length-t;u+=t){var a=u,p=u+r,v=i[a+t]-i[a],f=i[p+t]-i[p];o.push(v),s.push(f/v)}var h=[s[0]];if(n.monotonicFit)for(var u=1;u<o.length;u++){var l=s[u],c=s[u-1];if(l*c<=0)h.push(0);else{var d=o[u],g=o[u-1],y=d+g;h.push(3*y/((y+d)/c+(y+g)/l))}}else for(var u=t;u<i.length-t;u+=t){var a=u,p=u+r;h.push(Number(n.tension)*(i[p+t]-i[p-t])/(i[a+t]-i[a-t]))}h.push(s[s.length-1]);var w=[],L=[];for(u=0;u<o.length;u++){var P=h[u],m=h[u+1],l=s[u],A=1/o[u],y=P+m-l-l;w.push(y*A*A),L.push((l-y-P)*A)}for(var z=[],u=0;u<o.length;u++){var b=function(e,n,r,i,t){return function(o){var s=o-e,u=s*s;return n*s*u+r*u+i*s+t}};z.push(b(i[u*t],w[u],L[u],h[u],i[u*t+r]))}return z}function s(e,n,r){var i=e.points,t=e.pointsize,o=Number(n.curvePointFactor)*(i.length/t),s=new Array,u=new Array,a=-1,p=-1,v=0;if(n.fit){var f;if("undefined"==typeof n.fitPointDist){var h=i[0];f=(i[i.length-t]-h)/5e4}else f=Number(n.fitPointDist);for(var l=0;l<i.length;l+=t){var c,d;a=l,p=l+r,c=i[a]-f,d=i[a]+f;for(var g=2;c==i[a]||d==i[a];)c=i[a]-f*g,d=i[a]+f*g,g++;s[v]=c,u[v]=i[p],v++,s[v]=i[a],u[v]=i[p],v++,s[v]=d,u[v]=i[p],v++}}else for(var l=0;l<i.length;l+=t)a=l,p=l+r,s[v]=i[a],u[v]=i[p],v++;var y=s.length,w=new Array,L=new Array;w[0]=0,w[y-1]=0,L[0]=0;for(var l=1;l<y-1;++l){var P=s[l+1]-s[l-1];if(0==P)return[];var m=(s[l]-s[l-1])/P,A=m*w[l-1]+2;w[l]=(m-1)/A,L[l]=(u[l+1]-u[l])/(s[l+1]-s[l])-(u[l]-u[l-1])/(s[l]-s[l-1]),L[l]=(6*L[l]/(s[l+1]-s[l-1])-m*L[l-1])/A}for(var v=y-2;v>=0;--v)w[v]=w[v]*w[v+1]+L[v];var z=(s[y-1]-s[0])/(o-1),b=new Array,D=new Array,F=new Array;for(b[0]=s[0],D[0]=u[0],F.push(b[0]),F.push(D[0]),v=1;v<o;++v){b[v]=b[0]+v*z;for(var O=y-1,N=0;O-N>1;){var j=Math.round((O+N)/2);s[j]>b[v]?O=j:N=j}var k=s[O]-s[N];if(0==k)return[];var S=(s[O]-b[v])/k,C=(b[v]-s[N])/k;D[v]=S*u[N]+C*u[O]+((S*S*S-S)*w[N]+(C*C*C-C)*w[O])*(k*k)/6,F.push(b[v]),F.push(D[v])}return F}function u(e){if("undefined"!=typeof e.fit||"undefined"!=typeof e.curvePointFactor||"undefined"!=typeof e.fitPointDist)throw new Error("CurvedLines detected illegal parameters. The CurvedLines API changed with version 1.0.0 please check the options object.");return!1}e.hooks.processOptions.push(n)}var r={series:{curvedLines:{active:!1,apply:!1,monotonicFit:!1,tension:.5,nrSplinePoints:20,legacyOverride:undefined}}};e.plot.plugins.push({init:n,options:r,name:"curvedLines",version:"1.1.1"})}(jQuery);